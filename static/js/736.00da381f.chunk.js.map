{"version":3,"file":"static/js/736.00da381f.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,EAAAA,GAAH,gOAaJC,EAAWD,EAAAA,EAAAA,GAAH,uGAMRE,EAAYF,EAAAA,EAAAA,EAAH,sF,SCmCtB,EAhDa,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACJN,EAAUM,GACVC,QAAQC,IAAIF,EACb,IACAG,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EACf,GACJ,GAAE,CAACT,KAGF,SAACP,EAAD,UACqB,IAAlBK,EAAOY,OACNZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,aAAxB,OACT,UAACpB,EAAD,YACE,gBACEqB,IACED,EAAY,yCAC0BA,GA3BpD,2EA8BYE,IAAI,GACJC,MAAM,MACNC,OAAO,SAET,SAACvB,EAAD,WACE,uBAAIgB,OAEN,UAAChB,EAAD,YACE,kCACCiB,OAhBUC,EADN,KAsBX,wDAIP,C,yLCnDKM,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CAAEC,QAHI,mCAGcC,SAAU,QAASC,eAAe,KAGnDC,EAAqB,mCAAG,sGACZP,EAASQ,IAAI,uBADD,uBAC3BvB,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qDAKrBwB,EAAgB,mCAAG,WAAMC,GAAN,yFACPV,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNO,MAAAA,KAH0B,uBACtBzB,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShB0B,EAAgB,mCAAG,WAAMjB,GAAN,yFACPM,EAASQ,IAAT,iBAAuBd,IADhB,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBF,EAAgB,mCAAG,WAAMW,GAAN,yFACPM,EAASQ,IAAT,iBAAuBd,EAAvB,aADO,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,EAAK2B,MAFkB,2CAAH,sDAKhBC,EAAgB,mCAAG,WAAMnB,GAAN,yFACPM,EAASQ,IAAT,iBAAuBd,EAAvB,aADO,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,EAAK6B,SAFkB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api_movie.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemCast = styled.li`\n  text-decoration: none;\n  margin-bottom: 8px;\n  background-color: #c2fbd7;\n`;\n\nexport const ActorInfo = styled.p`\n  width: 188px;\n  padding-left: 6px;\n  padding-right: 6px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors } from 'services/api_movie';\nimport { ItemCast, List, ActorInfo } from './Cast.styled';\n\nconst defaultImage =\n  'https://cdn.pixabay.com/photo/2013/07/12/18/38/avatar-153605_960_720.png';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchMovieActors(movieId)\n      .then(data => {\n        setActors(data);\n        console.log(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <List>\n      {actors.length !== 0 ? (\n        actors.map(({ name, character, id, profile_path }) => (\n          <ItemCast key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                  : defaultImage\n              }\n              alt=\"\"\n              width=\"200\"\n              height=\"300\"\n            />\n            <ActorInfo>\n              <b>{name}</b>\n            </ActorInfo>\n            <ActorInfo>\n              <b>Role: </b>\n              {character}\n            </ActorInfo>\n          </ItemCast>\n        ))\n      ) : (\n        <p>We did not find information</p>\n      )}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a85bcd146b051e6a179fdcb9f5b0d494';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: API_KEY, language: 'en-US', include_adult: false },\n});\n\nexport const fetchMovieTrendingDay = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetail = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","ItemCast","ActorInfo","useState","actors","setActors","movieId","useParams","useEffect","fetchMovieActors","then","data","console","log","catch","error","length","map","name","character","id","profile_path","src","alt","width","height","instance","axios","baseURL","params","api_key","language","include_adult","fetchMovieTrendingDay","get","fetchMovieSearch","query","fetchMovieDetail","cast","fetchMovieReview","results"],"sourceRoot":""}