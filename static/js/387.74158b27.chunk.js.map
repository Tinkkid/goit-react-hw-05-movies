{"version":3,"file":"static/js/387.74158b27.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,EAAAA,GAAH,2MAYJC,EAAaD,EAAAA,EAAAA,GAAH,gMAUVE,EAAaF,EAAAA,EAAAA,EAAH,8C,SCcvB,EAjCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACHF,IAELG,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACJN,EAAWM,GACXC,QAAQC,IAAIF,EACb,IACAG,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EACf,GACJ,GAAE,CAACT,KAGF,SAACP,EAAD,UACsB,IAAnBK,EAAQY,OACPZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,UAACnB,EAAD,YACE,SAACC,EAAD,UAAagB,KACb,uBAAIC,MAFWC,EADP,KAOZ,SAACnB,EAAD,2CAIP,C,yLCjCKoB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CAAEC,QAHI,mCAGcC,SAAU,QAASC,eAAe,KAGnDC,EAAqB,mCAAG,sGACZP,EAASQ,IAAI,uBADD,uBAC3BlB,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,qDAKrBmB,EAAgB,mCAAG,WAAMC,GAAN,yFACPV,EAASQ,IAAI,gBAAiB,CACnDL,OAAQ,CACNO,MAAAA,KAH0B,uBACtBpB,EADsB,EACtBA,KADsB,kBAMvBA,GANuB,2CAAH,sDAShBqB,EAAgB,mCAAG,WAAMZ,GAAN,yFACPC,EAASQ,IAAT,iBAAuBT,IADhB,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBsB,EAAgB,mCAAG,WAAMb,GAAN,yFACPC,EAASQ,IAAT,iBAAuBT,EAAvB,aADO,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,EAAKuB,MAFkB,2CAAH,sDAKhBzB,EAAgB,mCAAG,WAAMW,GAAN,yFACPC,EAASQ,IAAT,iBAAuBT,EAAvB,aADO,uBACtBT,EADsB,EACtBA,KADsB,kBAEvBA,EAAKwB,SAFkB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api_movie.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemReview = styled.li`\n  text-decoration: none;\n  padding: 10px;\n  margin-bottom: 8px;\n  background-color: #c2fbd7;\n  &:hover {\n    box-shadow: rgba(58, 80, 62, 0.1) 0px 4px 12px;\n  }\n`;\n\nexport const AuthorName = styled.p`\n  font-weight: bold;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReview } from 'services/api_movie';\nimport { List, ItemReview, AuthorName } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    fetchMovieReview(movieId)\n      .then(data => {\n        setReviews(data);\n        console.log(data);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <List>\n      {reviews.length !== 0 ? (\n        reviews.map(({ author, content, id }) => (\n          <ItemReview key={id}>\n            <AuthorName>{author}</AuthorName>\n            <p>{content}</p>\n          </ItemReview>\n        ))\n      ) : (\n        <ItemReview>We did not find any reviews</ItemReview>\n      )}\n    </List>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'a85bcd146b051e6a179fdcb9f5b0d494';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: { api_key: API_KEY, language: 'en-US', include_adult: false },\n});\n\nexport const fetchMovieTrendingDay = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const fetchMovieSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetail = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieActors = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const fetchMovieReview = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","ItemReview","AuthorName","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReview","then","data","console","log","catch","error","length","map","author","content","id","instance","axios","baseURL","params","api_key","language","include_adult","fetchMovieTrendingDay","get","fetchMovieSearch","query","fetchMovieDetail","fetchMovieActors","cast","results"],"sourceRoot":""}